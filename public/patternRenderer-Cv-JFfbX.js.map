{"version":3,"file":"patternRenderer-Cv-JFfbX.js","sources":["../src/helpers/dom/focusInput.ts","../src/components/space.tsx","../src/vendor/solid-transition-group/common.ts","../node_modules/.pnpm/@solid-primitives+transition-group@1.0.3_solid-js@1.8.7/node_modules/@solid-primitives/transition-group/dist/index.js","../node_modules/.pnpm/@solid-primitives+refs@1.0.5_solid-js@1.8.7/node_modules/@solid-primitives/refs/dist/index.js","../src/vendor/solid-transition-group/transition.ts","../src/lib/chatBackgroundStore.ts","../src/helpers/easing/easeOutQuad.ts","../src/components/chat/gradientRenderer.ts","../src/components/chat/patternRenderer.ts"],"sourcesContent":["import placeCaretAtEnd from './placeCaretAtEnd';\n\nexport default function focusInput(input: HTMLElement, e?: KeyboardEvent) {\n  input.focus();\n  placeCaretAtEnd(input);\n\n  if(e) {\n    // clone and dispatch same event to new input. it is needed for sending message if input was blurred\n    const newEvent = new KeyboardEvent(e.type, e);\n    input.dispatchEvent(newEvent);\n  }\n}\n","import {JSX, splitProps} from 'solid-js';\n\nexport default function Space(\n  inProps: JSX.HTMLAttributes<HTMLDivElement> & {\n    amount: string;\n    withTransition?: boolean;\n  }\n) {\n  const [props, divProps] = splitProps(inProps, ['amount', 'withTransition']);\n  return (\n    <div {...divProps} style={{'padding-top': props.amount, 'transition': props.withTransition ? '.2s' : undefined}} />\n  );\n}\n","// https://github.com/solidjs-community/solid-transition-group\n\nimport {createMemo} from 'solid-js';\nimport type {TransitionEvents, TransitionProps} from './transition';\n// import type {TransitionGroupProps} from './transitionGroup';\n\nexport function createClassnames(props: TransitionProps/*  & TransitionGroupProps */) {\n  return createMemo(() => {\n    const name = props.name || 's';\n    return {\n      enterActive: (props.enterActiveClass || name + '-enter-active').split(' '),\n      enter: (props.enterClass || name + '-enter').split(' '),\n      enterTo: (props.enterToClass || name + '-enter-to').split(' '),\n      exitActive: (props.exitActiveClass || name + '-exit-active').split(' '),\n      exit: (props.exitClass || name + '-exit').split(' '),\n      exitTo: (props.exitToClass || name + '-exit-to').split(' ')\n      // move: (props.moveClass || name + '-move').split(' ')\n    };\n  });\n}\n\n// https://github.com/solidjs-community/solid-transition-group/issues/12\n// for the css transition be triggered properly on firefox\n// we need to wait for two frames before changeing classes\nexport function nextFrame(fn: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(fn));\n}\n\n/**\n * Run an enter transition on an element - common for both Transition and TransitionGroup\n */\nexport function enterTransition(\n  classes: ReturnType<ReturnType<typeof createClassnames>>,\n  events: TransitionEvents,\n  el: Element,\n  done?: VoidFunction,\n  duration?: number\n) {\n  const {onBeforeEnter, onEnter, onAfterEnter} = events;\n\n  let timeout: number;\n\n  // before the elements are added to the DOM\n  onBeforeEnter?.(el);\n\n  el.classList.add(...classes.enter);\n  el.classList.add(...classes.enterActive);\n\n  // after the microtask the elements will be added to the DOM\n  // and onEnter will be called in the same frame\n  queueMicrotask(() => {\n    // Don't animate element if it's not in the DOM\n    // This can happen when elements are changed under Suspense\n    if(!el.parentNode) return done?.();\n\n    onEnter?.(el, () => endTransition());\n  });\n\n  nextFrame(() => {\n    el.classList.remove(...classes.enter);\n    el.classList.add(...classes.enterTo);\n\n    if(!onEnter || onEnter.length < 2) {\n      el.addEventListener('transitionend', endTransition);\n      el.addEventListener('animationend', endTransition);\n\n      if(duration !== undefined) {\n        timeout = window.setTimeout(() => endTransition(), duration);\n      }\n    }\n  });\n\n  function endTransition(e?: Event) {\n    if(!e || e.target === el) {\n      clearTimeout(timeout);\n      done?.(); // starts exit transition in \"in-out\" mode\n      el.removeEventListener('transitionend', endTransition);\n      el.removeEventListener('animationend', endTransition);\n      el.classList.remove(...classes.enterActive);\n      el.classList.remove(...classes.enterTo);\n      onAfterEnter?.(el);\n    }\n  }\n}\n\n/**\n * Run an exit transition on an element - common for both Transition and TransitionGroup\n */\nexport function exitTransition(\n  classes: ReturnType<ReturnType<typeof createClassnames>>,\n  events: TransitionEvents,\n  el: Element,\n  done?: VoidFunction,\n  duration?: number\n) {\n  const {onBeforeExit, onExit, onAfterExit} = events;\n\n  // Don't animate element if it's not in the DOM\n  // This can happen when elements are changed under Suspense\n  if(!el.parentNode) return done?.();\n\n  let timeout: number;\n\n  onBeforeExit?.(el);\n\n  el.classList.add(...classes.exit);\n  el.classList.add(...classes.exitActive);\n\n  onExit?.(el, () => endTransition());\n\n  nextFrame(() => {\n    el.classList.remove(...classes.exit);\n    el.classList.add(...classes.exitTo);\n\n    if(!onExit || onExit.length < 2) {\n      el.addEventListener('transitionend', endTransition);\n      el.addEventListener('animationend', endTransition);\n\n      if(duration !== undefined) {\n        timeout = window.setTimeout(() => endTransition(), duration);\n      }\n    }\n  });\n\n  function endTransition(e?: Event) {\n    if(!e || e.target === el) {\n      // calling done() will remove element from the DOM,\n      // but also trigger onChange callback in <TransitionGroup>.\n      // Which is why the classes need to removed afterwards,\n      // so that removing them won't change el styles when for the move transition\n      clearTimeout(timeout);\n      done?.();\n      el.removeEventListener('transitionend', endTransition);\n      el.removeEventListener('animationend', endTransition);\n      el.classList.remove(...classes.exitActive);\n      el.classList.remove(...classes.exitTo);\n      onAfterExit?.(el);\n    }\n  }\n}\n","import { untrack, createSignal, useTransition, createComputed, batch, createMemo, $TRACK } from 'solid-js';\nimport { isServer } from 'solid-js/web';\n\n// src/index.ts\nvar noop = () => {\n};\nvar noopTransition = (el, done) => done();\nfunction createSwitchTransition(source, options) {\n  const initSource = untrack(source);\n  const initReturned = initSource ? [initSource] : [];\n  if (isServer) {\n    return () => initReturned;\n  }\n  const { onEnter = noopTransition, onExit = noopTransition } = options;\n  const [returned, setReturned] = createSignal(\n    options.appear ? [] : initReturned\n  );\n  const [isTransitionPending] = useTransition();\n  let next;\n  let isExiting = false;\n  function exitTransition(el, after) {\n    if (!el)\n      return after && after();\n    isExiting = true;\n    onExit(el, () => {\n      batch(() => {\n        isExiting = false;\n        setReturned((p) => p.filter((e) => e !== el));\n        after && after();\n      });\n    });\n  }\n  function enterTransition(after) {\n    const el = next;\n    if (!el)\n      return after && after();\n    next = void 0;\n    setReturned((p) => [el, ...p]);\n    onEnter(el, after ?? noop);\n  }\n  const triggerTransitions = options.mode === \"out-in\" ? (\n    // exit -> enter\n    (prev) => isExiting || exitTransition(prev, enterTransition)\n  ) : options.mode === \"in-out\" ? (\n    // enter -> exit\n    (prev) => enterTransition(() => exitTransition(prev))\n  ) : (\n    // exit & enter\n    (prev) => {\n      exitTransition(prev);\n      enterTransition();\n    }\n  );\n  createComputed(\n    (prev) => {\n      const el = source();\n      if (untrack(isTransitionPending)) {\n        isTransitionPending();\n        return prev;\n      }\n      if (el !== prev) {\n        next = el;\n        batch(() => untrack(() => triggerTransitions(prev)));\n      }\n      return el;\n    },\n    options.appear ? void 0 : initSource\n  );\n  return returned;\n}\nfunction createListTransition(source, options) {\n  const initSource = untrack(source);\n  if (isServer) {\n    const copy = initSource.slice();\n    return () => copy;\n  }\n  const { onChange } = options;\n  let prevSet = new Set(options.appear ? void 0 : initSource);\n  const exiting = /* @__PURE__ */ new WeakSet();\n  const [toRemove, setToRemove] = createSignal([], { equals: false });\n  const [isTransitionPending] = useTransition();\n  const finishRemoved = options.exitMethod === \"remove\" ? noop : (els) => {\n    setToRemove((p) => (p.push.apply(p, els), p));\n    for (const el of els)\n      exiting.delete(el);\n  };\n  const handleRemoved = options.exitMethod === \"remove\" ? noop : options.exitMethod === \"keep-index\" ? (els, el, i) => els.splice(i, 0, el) : (els, el) => els.push(el);\n  return createMemo(\n    (prev) => {\n      const elsToRemove = toRemove();\n      const sourceList = source();\n      sourceList[$TRACK];\n      if (untrack(isTransitionPending)) {\n        isTransitionPending();\n        return prev;\n      }\n      if (elsToRemove.length) {\n        const next = prev.filter((e) => !elsToRemove.includes(e));\n        elsToRemove.length = 0;\n        onChange({ list: next, added: [], removed: [], unchanged: next, finishRemoved });\n        return next;\n      }\n      return untrack(() => {\n        const nextSet = new Set(sourceList);\n        const next = sourceList.slice();\n        const added = [];\n        const removed = [];\n        const unchanged = [];\n        for (const el of sourceList) {\n          (prevSet.has(el) ? unchanged : added).push(el);\n        }\n        let nothingChanged = !added.length;\n        for (let i = 0; i < prev.length; i++) {\n          const el = prev[i];\n          if (!nextSet.has(el)) {\n            if (!exiting.has(el)) {\n              removed.push(el);\n              exiting.add(el);\n            }\n            handleRemoved(next, el, i);\n          }\n          if (nothingChanged && el !== next[i])\n            nothingChanged = false;\n        }\n        if (!removed.length && nothingChanged)\n          return prev;\n        onChange({ list: next, added, removed, unchanged, finishRemoved });\n        prevSet = nextSet;\n        return next;\n      });\n    },\n    options.appear ? [] : initSource.slice()\n  );\n}\n\nexport { createListTransition, createSwitchTransition };\n","import { chain, arrayEquals } from '@solid-primitives/utils';\nimport { createMemo, children, createComputed, untrack, onCleanup } from 'solid-js';\nimport { isServer } from 'solid-js/web';\n\n// src/index.ts\nfunction mergeRefs(...refs) {\n  return chain(refs);\n}\nvar defaultElementPredicate = isServer ? (item) => item != null && typeof item === \"object\" && \"t\" in item : (item) => item instanceof Element;\nfunction getResolvedElements(value, predicate) {\n  if (predicate(value))\n    return value;\n  if (typeof value === \"function\" && !value.length)\n    return getResolvedElements(value(), predicate);\n  if (Array.isArray(value)) {\n    const results = [];\n    for (const item of value) {\n      const result = getResolvedElements(item, predicate);\n      if (result)\n        Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results.length ? results : null;\n  }\n  return null;\n}\nfunction resolveElements(fn, predicate = defaultElementPredicate, serverPredicate = defaultElementPredicate) {\n  const children2 = createMemo(fn);\n  const memo = createMemo(\n    () => getResolvedElements(children2(), isServer ? serverPredicate : predicate)\n  );\n  memo.toArray = () => {\n    const value = memo();\n    return Array.isArray(value) ? value : value ? [value] : [];\n  };\n  return memo;\n}\nfunction getFirstChild(value, predicate) {\n  if (predicate(value))\n    return value;\n  if (typeof value === \"function\" && !value.length)\n    return getFirstChild(value(), predicate);\n  if (Array.isArray(value)) {\n    for (const item of value) {\n      const result = getFirstChild(item, predicate);\n      if (result)\n        return result;\n    }\n  }\n  return null;\n}\nfunction resolveFirst(fn, predicate = defaultElementPredicate, serverPredicate = defaultElementPredicate) {\n  const children2 = createMemo(fn);\n  return createMemo(() => getFirstChild(children2(), isServer ? serverPredicate : predicate));\n}\nfunction Refs(props) {\n  if (isServer) {\n    return props.children;\n  }\n  const cb = props.ref, resolved = children(() => props.children);\n  let prev = [];\n  createComputed(() => {\n    const els = resolved.toArray().filter(defaultElementPredicate);\n    if (!arrayEquals(prev, els))\n      untrack(() => cb(els));\n    prev = els;\n  }, []);\n  onCleanup(() => prev.length && cb([]));\n  return resolved;\n}\nfunction Ref(props) {\n  if (isServer) {\n    return props.children;\n  }\n  const cb = props.ref, resolved = children(() => props.children);\n  let prev;\n  createComputed(() => {\n    const el = resolved.toArray().find(defaultElementPredicate);\n    if (el !== prev)\n      untrack(() => cb(el));\n    prev = el;\n  });\n  onCleanup(() => prev && cb(void 0));\n  return resolved;\n}\n\nexport { Ref, Refs, defaultElementPredicate, getFirstChild, getResolvedElements, mergeRefs, resolveElements, resolveFirst };\n","// https://github.com/solidjs-community/solid-transition-group\n\nimport {type FlowComponent, type JSX} from 'solid-js';\nimport {createClassnames, enterTransition, exitTransition} from './common';\nimport {createSwitchTransition} from '@solid-primitives/transition-group';\nimport {resolveFirst} from '@solid-primitives/refs';\n\nexport type TransitionEvents = {\n  /**\n   * Function called before the enter transition starts.\n   * The {@link element} is not yet rendered.\n   */\n  onBeforeEnter?: (element: Element) => void;\n  /**\n   * Function called when the enter transition starts.\n   * The {@link element} is rendered to the DOM.\n   *\n   * Call {@link done} to end the transition - removes the enter classes,\n   * and calls {@link TransitionEvents.onAfterEnter}.\n   * If the parameter for {@link done} is not provided, it will be called on `transitionend` or `animationend`.\n   */\n  onEnter?: (element: Element, done: () => void) => void;\n  /**\n   * Function called after the enter transition ends.\n   * The {@link element} is removed from the DOM.\n   */\n  onAfterEnter?: (element: Element) => void;\n  /**\n   * Function called before the exit transition starts.\n   * The {@link element} is still rendered, exit classes are not yet applied.\n   */\n  onBeforeExit?: (element: Element) => void;\n  /**\n   * Function called when the exit transition starts, after the exit classes are applied\n   * ({@link TransitionProps.enterToClass} and {@link TransitionProps.exitActiveClass}).\n   * The {@link element} is still rendered.\n   *\n   * Call {@link done} to end the transition - removes exit classes,\n   * calls {@link TransitionEvents.onAfterExit} and removes the element from the DOM.\n   * If the parameter for {@link done} is not provided, it will be called on `transitionend` or `animationend`.\n   */\n  onExit?: (element: Element, done: () => void) => void;\n  /**\n   * Function called after the exit transition ends.\n   * The {@link element} is removed from the DOM.\n   */\n  onAfterExit?: (element: Element) => void;\n};\n\n/**\n * Props for the {@link Transition} component.\n */\nexport type TransitionProps = TransitionEvents & {\n  /**\n   * Used to automatically generate transition CSS class names.\n   * e.g. `name: 'fade'` will auto expand to `.fade-enter`, `.fade-enter-active`, etc.\n   * Defaults to `\"s\"`.\n   */\n  name?: string;\n  /**\n   * CSS class applied to the entering element for the entire duration of the enter transition.\n   * Defaults to `\"s-enter-active\"`.\n   */\n  enterActiveClass?: string;\n  /**\n   * CSS class applied to the entering element at the start of the enter transition, and removed the frame after.\n   * Defaults to `\"s-enter\"`.\n   */\n  enterClass?: string;\n  /**\n   * CSS class applied to the entering element after the enter transition starts.\n   * Defaults to `\"s-enter-to\"`.\n   */\n  enterToClass?: string;\n  /**\n   * CSS class applied to the exiting element for the entire duration of the exit transition.\n   * Defaults to `\"s-exit-active\"`.\n   */\n  exitActiveClass?: string;\n  /**\n   * CSS class applied to the exiting element at the start of the exit transition, and removed the frame after.\n   * Defaults to `\"s-exit\"`.\n   */\n  exitClass?: string;\n  /**\n   * CSS class applied to the exiting element after the exit transition starts.\n   * Defaults to `\"s-exit-to\"`.\n   */\n  exitToClass?: string;\n  /**\n   * Whether to apply transition on initial render. Defaults to `false`.\n   */\n  appear?: boolean;\n  /**\n   * Controls the timing sequence of leaving/entering transitions.\n   * Available modes are `\"outin\"` and `\"inout\"`;\n   * Defaults to simultaneous.\n   */\n  mode?: 'inout' | 'outin';\n  /**\n   * The duration of the transition, in milliseconds.\n   * Defaults to `300`.\n   */\n  duration?: number;\n};\n\nconst TRANSITION_MODE_MAP = {\n  inout: 'in-out',\n  outin: 'out-in'\n} as const;\n\n/**\n * The `<Transition>` component lets you apply enter and leave animations on element passed to `props.children`.\n *\n * It only supports transitioning a single element at a time.\n *\n * @param props {@link TransitionProps}\n */\nexport const Transition: FlowComponent<TransitionProps> = (props) => {\n  const classnames = createClassnames(props);\n\n  return createSwitchTransition(\n    resolveFirst(() => props.children),\n    {\n      mode: TRANSITION_MODE_MAP[props.mode!],\n      appear: props.appear,\n      onEnter(el, done) {\n        enterTransition(classnames(), props, el, done, props.duration);\n      },\n      onExit(el, done) {\n        exitTransition(classnames(), props, el, done, props.duration);\n      }\n    }\n  ) as unknown as JSX.Element;\n};\n","import {DEFAULT_BACKGROUND_SLUG} from '../config/app';\nimport blur from '../helpers/blur';\nimport type {Document, WallPaper} from '../layer';\n\nimport type AppDownloadManagerInstance from './appManagers/appDownloadManager';\nimport type {AppManagers} from './appManagers/managers';\nimport CacheStorageController from './files/cacheStorage';\nimport StaticUtilityClass from './staticUtilityClass';\n\n\nnamespace ChatBackgroundStore {\n  export type BackgroundPromises = {\n    [url: string]: MaybePromise<string>\n  };\n\n  export type GetBackgroundArgs = {\n    slug: string;\n    canDownload?: boolean;\n    blur?: boolean;\n\n    managers?: AppManagers;\n    appDownloadManager?: typeof AppDownloadManagerInstance;\n  };\n\n  export type SetBackgroundUrlToCacheArgs = {\n    slug: string;\n    url: string;\n    blur?: boolean;\n  };\n}\n\nclass ChatBackgroundStore extends StaticUtilityClass {\n  private static cacheStorage = new CacheStorageController('cachedBackgrounds');\n  private static backgroundPromises: ChatBackgroundStore.BackgroundPromises = {};\n\n  public static getWallPaperStorageUrl(slug: string, blur?: boolean) {\n    return `backgrounds/${slug}${blur ? '?blur' : ''}`;\n  }\n\n  public static hasWallPaperStorageUrl(slug: string, blur?: boolean) {\n    const storageUrl = this.getWallPaperStorageUrl(slug, blur);\n    return this.cacheStorage.has(storageUrl);\n  }\n\n  public static getBackground({\n    slug,\n    canDownload,\n    blur,\n\n    managers,\n    appDownloadManager\n  }: ChatBackgroundStore.GetBackgroundArgs) {\n    const storageUrl = this.getWallPaperStorageUrl(slug, blur);\n    const canReallyDownload = canDownload && !!managers && !!appDownloadManager;\n\n    return this.backgroundPromises[storageUrl] ||= this.cacheStorage.getFile(storageUrl).then((blob) => {\n      return this.backgroundPromises[storageUrl] = URL.createObjectURL(blob);\n    }, canReallyDownload ? async(err) => {\n      if((err as ApiError).type !== 'NO_ENTRY_FOUND') {\n        throw err;\n      }\n\n      const wallPaper = await managers.appThemesManager.getWallPaperBySlug(slug);\n      let url = await appDownloadManager.downloadMediaURL({\n        media: (wallPaper as WallPaper.wallPaper).document as Document.document\n      });\n\n      if(blur) {\n        url = await this.blurWallPaperImage(url);\n      }\n\n      this.saveWallPaperToCache(slug, url, blur);\n      return this.backgroundPromises[storageUrl] = url;\n    } : undefined);\n  }\n\n  public static blurWallPaperImage(url: string) {\n    const {canvas, promise} = blur(url, 12, 4);\n    return promise.then(() => {\n      return canvas.toDataURL();\n    });\n  }\n\n  public static saveWallPaperToCache(slug: string, url: string, blur?: boolean) {\n    if(!slug || slug === DEFAULT_BACKGROUND_SLUG) {\n      return;\n    }\n\n    return fetch(url).then((response) => {\n      return this.cacheStorage.save(this.getWallPaperStorageUrl(slug, blur), response);\n    });\n  }\n\n  public static setBackgroundUrlToCache({slug, url, blur}: ChatBackgroundStore.SetBackgroundUrlToCacheArgs) {\n    this.backgroundPromises[this.getWallPaperStorageUrl(slug, blur)] = url;\n  }\n}\n\nexport default ChatBackgroundStore;\n","export default function easeOutQuad(t: number, b: number, c: number, d: number) {\n  return t >= d ? b + c : easeOutQuadApply(t / d, c) + b;\n}\n\nexport function easeOutQuadApply(v: number, c: number) {\n  return -c * v * (v - 2);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko, Artem Kolnogorov and unknown creator of the script taken from http://useless.altervista.org/gradient.html\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {animateSingle} from '../../helpers/animation';\nimport {hexToRgb} from '../../helpers/color';\nimport {easeOutQuadApply} from '../../helpers/easing/easeOutQuad';\n\nconst WIDTH = 50;\nconst HEIGHT = WIDTH;\n\ntype Point = {x: number, y: number};\n\nexport default class ChatBackgroundGradientRenderer {\n  private readonly _width = WIDTH;\n  private readonly _height = HEIGHT;\n  private _phase: number;\n  private _tail: number;\n  private readonly _tails = 90;\n  // private readonly _scrollTails = 50;\n  private _frames: ImageData[];\n  private _colors: {r: number, g: number, b: number}[];\n  private readonly _curve = [\n    0, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n    13, 14, 15, 16, 17, 18, 18.3, 18.6, 18.9, 19.2, 19.5, 19.8, 20.1, 20.4, 20.7,\n    21.0, 21.3, 21.6, 21.9, 22.2, 22.5, 22.8, 23.1, 23.4, 23.7, 24.0, 24.3, 24.6,\n    24.9, 25.2, 25.5, 25.8, 26.1, 26.3, 26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27\n  ];\n  private readonly _incrementalCurve: number[];\n  private readonly _positions: Point[] = [\n    {x: 0.80, y: 0.10},\n    {x: 0.60, y: 0.20},\n    {x: 0.35, y: 0.25},\n    {x: 0.25, y: 0.60},\n    {x: 0.20, y: 0.90},\n    {x: 0.40, y: 0.80},\n    {x: 0.65, y: 0.75},\n    {x: 0.75, y: 0.40}\n  ];\n  private readonly _phases = this._positions.length;\n  // private _onWheelRAF: number;\n  // private _scrollDelta: number;\n\n  // private _ts = 0;\n  // private _fps = 15;\n  // private _frametime = 1000 / this._fps;\n  // private _raf: number;\n\n  private _canvas: HTMLCanvasElement;\n  private _ctx: CanvasRenderingContext2D;\n  private _hc: HTMLCanvasElement;\n  private _hctx: CanvasRenderingContext2D;\n\n  // private _addedScrollListener: boolean;\n  private _animatingToNextPosition: boolean;\n  private _nextPositionTail: number;\n  private _nextPositionTails: number;\n  private _nextPositionLeft: number;\n\n  constructor() {\n    const diff = this._tails / this._curve[this._curve.length - 1];\n\n    for(let i = 0, length = this._curve.length; i < length; ++i) {\n      this._curve[i] = this._curve[i] * diff;\n    }\n\n    this._incrementalCurve = this._curve.map((v, i, arr) => {\n      return v - (arr[i - 1] ?? 0);\n    });\n  }\n\n  private hexToRgb(hex: string) {\n    const result = hexToRgb(hex);\n    return {r: result[0], g: result[1], b: result[2]};\n  }\n\n  private getPositions(shift: number) {\n    const positions = this._positions.slice();\n    positions.push(...positions.splice(0, shift));\n\n    const result: typeof positions = [];\n    for(let i = 0; i < positions.length; i += 2) {\n      result.push(positions[i]);\n    }\n    return result;\n  }\n\n  private getNextPositions(phase: number, curveMax: number, curve: number[]) {\n    const pos = this.getPositions(phase);\n    if(!curve[0] && curve.length === 1) {\n      return [pos];\n    }\n\n    const nextPos = this.getPositions(++phase % this._phases);\n    const distances = nextPos.map((nextPos, idx) => {\n      return {\n        x: (nextPos.x - pos[idx].x) / curveMax,\n        y: (nextPos.y - pos[idx].y) / curveMax\n      };\n    });\n\n    const positions = curve.map((value) => {\n      return distances.map((distance, idx) => {\n        return {\n          x: pos[idx].x + distance.x * value,\n          y: pos[idx].y + distance.y * value\n        };\n      });\n    });\n\n    return positions;\n  }\n\n  private curPosition(phase: number, tail: number) {\n    const positions = this.getNextPositions(phase, this._tails, [tail]);\n    return positions[0];\n  }\n\n  private changeTail(diff: number) {\n    this._tail += diff;\n\n    while(this._tail >= this._tails) {\n      this._tail -= this._tails;\n      if(++this._phase >= this._phases) {\n        this._phase -= this._phases;\n      }\n    }\n\n    while(this._tail < 0) {\n      this._tail += this._tails;\n      if(--this._phase < 0) {\n        this._phase += this._phases;\n      }\n    }\n  }\n\n  // private onWheel = (e: {deltaY: number}) => {\n  //   if(this._animatingToNextPosition) {\n  //     return;\n  //   }\n\n  //   this._scrollDelta += e.deltaY;\n  //   if(this._onWheelRAF === undefined) {\n  //     this._onWheelRAF = requestAnimationFrame(this.drawOnWheel);\n  //   }\n  // };\n\n  private changeTailAndDraw(diff: number) {\n    this.changeTail(diff);\n    const curPos = this.curPosition(this._phase, this._tail);\n    this.drawGradient(curPos);\n  }\n\n  // private drawOnWheel = () => {\n  //   const value = this._scrollDelta / this._scrollTails;\n  //   this._scrollDelta %= this._scrollTails;\n  //   const diff = value > 0 ? Math.floor(value) : Math.ceil(value);\n  //   if(diff) {\n  //     this.changeTailAndDraw(diff);\n  //   }\n  //   this._onWheelRAF = undefined;\n  // };\n\n  private drawNextPositionAnimated = (getProgress?: () => number) => {\n    let done: boolean, id: ImageData;\n    if(getProgress) {\n      const value = getProgress();\n      done = value >= 1;\n      const transitionValue = easeOutQuadApply(value, 1);\n      const nextPositionTail = this._nextPositionTail ?? 0;\n      const tail = this._nextPositionTail = this._nextPositionTails * transitionValue;\n      const diff = tail - nextPositionTail;\n      if(diff) {\n        this._nextPositionLeft -= diff;\n        this.changeTailAndDraw(-diff);\n      }\n    } else {\n      const frames = this._frames;\n      id = frames.shift();\n      done = !frames.length;\n    }\n\n    if(id) {\n      this.drawImageData(id);\n    }\n\n    if(done) {\n      this._nextPositionLeft = undefined;\n      this._nextPositionTails = undefined;\n      this._nextPositionTail = undefined;\n      this._animatingToNextPosition = undefined;\n    }\n\n    return !done;\n  };\n\n  private getGradientImageData(positions: Point[], phase = this._phase, progress = 1 - this._tail / this._tails) {\n    const id = this._hctx.createImageData(this._width, this._height);\n    const pixels = id.data;\n    const colorsLength = this._colors.length;\n\n    const positionsForPhase = (phase: number) => {\n      const result: typeof positions = [];\n      for(let i = 0; i != 4; ++i) {\n        result[i] = {...this._positions[(phase + i * 2) % this._positions.length]};\n        result[i].y = 1.0 - result[i].y;\n      }\n      return result;\n    };\n\n    const previousPhase = (phase + 1) % this._positions.length;\n    const previous = positionsForPhase(previousPhase);\n    const current = positionsForPhase(phase);\n\n    let offset = 0;\n    for(let y = 0; y < this._height; ++y) {\n      const directPixelY = y / this._height;\n      const centerDistanceY = directPixelY - 0.5;\n      const centerDistanceY2 = centerDistanceY * centerDistanceY;\n      for(let x = 0; x < this._width; ++x) {\n        const directPixelX = x / this._width;\n        const centerDistanceX = directPixelX - 0.5;\n        const centerDistance = Math.sqrt(centerDistanceX * centerDistanceX + centerDistanceY2);\n\n        const swirlFactor = 0.35 * centerDistance;\n        const theta = swirlFactor * swirlFactor * 0.8 * 8.0;\n        const sinTheta = Math.sin(theta);\n        const cosTheta = Math.cos(theta);\n\n        const pixelX = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta));\n        const pixelY = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta));\n\n        let distanceSum = 0.0;\n        let r = 0.0;\n        let g = 0.0;\n        let b = 0.0;\n        for(let i = 0; i < colorsLength; ++i) {\n          const colorX = previous[i].x + (current[i].x - previous[i].x) * progress;\n          const colorY = previous[i].y + (current[i].y - previous[i].y) * progress;\n\n          const distanceX = pixelX - colorX;\n          const distanceY = pixelY - colorY;\n\n          let distance = Math.max(0.0, 0.9 - Math.sqrt(distanceX * distanceX + distanceY * distanceY));\n          distance = distance * distance * distance * distance;\n          distanceSum += distance;\n\n          r += distance * this._colors[i].r;\n          g += distance * this._colors[i].g;\n          b += distance * this._colors[i].b;\n        }\n\n        pixels[offset++] = r / distanceSum;\n        pixels[offset++] = g / distanceSum;\n        pixels[offset++] = b / distanceSum;\n        pixels[offset++] = 0xFF;\n      }\n    }\n    return id;\n  }\n\n  private drawImageData(id: ImageData) {\n    this._hctx.putImageData(id, 0, 0);\n    this._ctx.drawImage(this._hc, 0, 0, this._width, this._height);\n  }\n\n  private drawGradient(positions: Point[]) {\n    this.drawImageData(this.getGradientImageData(positions));\n  }\n\n  // private doAnimate = () => {\n  //   const now = +Date.now();\n  //   if(!document.hasFocus() || (now - this._ts) < this._frametime) {\n  //     this._raf = requestAnimationFrame(this.doAnimate);\n  //     return;\n  //   }\n\n  //   this._ts = now;\n  //   this.changeTail(1);\n  //   const cur_pos = this.curPosition(this._phase, this._tail);\n  //   this.drawGradient(cur_pos);\n  //   this._raf = requestAnimationFrame(this.doAnimate);\n  // };\n\n  // public animate(start?: boolean) {\n  //   if(!start) {\n  //     cancelAnimationFrame(this._raf);\n  //     return;\n  //   }\n  //   this.doAnimate();\n  // }\n\n  public init(el: HTMLCanvasElement) {\n    this._frames = [];\n    this._phase = 0;\n    this._tail = 0;\n    // this._scrollDelta = 0;\n    // if(this._onWheelRAF !== undefined) {\n    //   cancelAnimationFrame(this._onWheelRAF);\n    //   this._onWheelRAF = undefined;\n    // }\n\n    const colors = el.getAttribute('data-colors').split(',');\n    this._colors = colors.map((color) => {\n      return this.hexToRgb(color);\n    });\n\n    if(!this._hc) {\n      this._hc = document.createElement('canvas');\n      this._hc.width = this._width;\n      this._hc.height = this._height;\n      this._hctx = this._hc.getContext('2d', {alpha: false});\n    }\n\n    this._canvas = el;\n    this._ctx = this._canvas.getContext('2d', {alpha: false});\n    this.update();\n  }\n\n  private update() {\n    if(this._colors.length < 2) {\n      const color = this._colors[0];\n      this._ctx.fillStyle = `rgb(${color.r}, ${color.g}, ${color.b})`;\n      this._ctx.fillRect(0, 0, this._width, this._height);\n      return;\n    }\n\n    const position = this.curPosition(this._phase, this._tail);\n    this.drawGradient(position);\n  }\n\n  public toNextPosition(getProgress?: () => number) {\n    if(this._colors.length < 2) {\n      return;\n    }\n\n    if(getProgress) {\n      this._nextPositionLeft = this._tails + (this._nextPositionLeft ?? 0);\n      this._nextPositionTails = this._nextPositionLeft;\n      this._nextPositionTail = undefined;\n      this._animatingToNextPosition = true;\n      animateSingle(this.drawNextPositionAnimated.bind(this, getProgress), this);\n      return;\n    }\n\n    const tail = this._tail;\n    const tails = this._tails;\n\n    let nextPhaseOnIdx: number;\n\n    const curve: number[] = [];\n    for(let i = 0, length = this._incrementalCurve.length; i < length; ++i) {\n      const inc = this._incrementalCurve[i];\n      let value = (curve[i - 1] ?? tail) + inc;\n\n      if(+value.toFixed(2) > tails && nextPhaseOnIdx === undefined) {\n        nextPhaseOnIdx = i;\n        value %= tails;\n      }\n\n      curve.push(value);\n    }\n\n    const currentPhaseCurve = curve.slice(0, nextPhaseOnIdx);\n    const nextPhaseCurve = nextPhaseOnIdx !== undefined ? curve.slice(nextPhaseOnIdx) : [];\n\n    [currentPhaseCurve, nextPhaseCurve].forEach((curve, idx, curves) => {\n      const last = curve[curve.length - 1];\n      if(last !== undefined && last > tails) {\n        curve[curve.length - 1] = +last.toFixed(2);\n      }\n\n      this._tail = last ?? 0;\n\n      if(!curve.length) {\n        return;\n      }\n\n      const positions = this.getNextPositions(this._phase, tails, curve);\n      if(idx !== (curves.length - 1)) {\n        if(++this._phase >= this._phases) {\n          this._phase -= this._phases;\n        }\n      }\n\n      const ids = positions.map((pos) => {\n        return this.getGradientImageData(pos);\n      });\n\n      this._frames.push(...ids);\n    });\n\n    this._animatingToNextPosition = true;\n    animateSingle(this.drawNextPositionAnimated, this);\n  }\n\n  // public toNextPositionThrottled = throttle(this.toNextPosition.bind(this), 100, true);\n\n  // public scrollAnimate(start?: boolean) {\n  //   return;\n\n  //   if(this._colors.length < 2 && start) {\n  //     return;\n  //   }\n\n  //   if(start && !this._addedScrollListener) {\n  //     document.addEventListener('wheel', this.onWheel);\n  //     this._addedScrollListener = true;\n  //   } else if(!start && this._addedScrollListener) {\n  //     document.removeEventListener('wheel', this.onWheel);\n  //     this._addedScrollListener = false;\n  //   }\n  // }\n\n  public cleanup() {\n    // this.scrollAnimate(false);\n    // this.animate(false);\n  }\n\n  public static createCanvas(colors?: string) {\n    const canvas = document.createElement('canvas');\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n    if(colors !== undefined) {\n      canvas.dataset.colors = colors;\n    }\n\n    return canvas;\n  }\n\n  public static create(colors?: string) {\n    const canvas = this.createCanvas(colors);\n    const gradientRenderer = new ChatBackgroundGradientRenderer();\n    gradientRenderer.init(canvas);\n\n    return {gradientRenderer, canvas};\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport {renderImageFromUrlPromise} from '../../helpers/dom/renderImageFromUrl';\nimport mediaSizes, {ScreenSize} from '../../helpers/mediaSizes';\nimport windowSize from '../../helpers/windowSize';\nimport IS_IMAGE_BITMAP_SUPPORTED from '../../environment/imageBitmapSupport';\nimport {IS_FIREFOX} from '../../environment/userAgent';\n\nconst SCALE_PATTERN = false;\nconst USE_BITMAP = IS_IMAGE_BITMAP_SUPPORTED && IS_FIREFOX;\n\ntype ChatBackgroundPatternRendererInitOptions = {\n  element: HTMLElement;\n  url: string,\n  width: number,\n  height: number,\n  mask?: boolean\n};\n\nexport default class ChatBackgroundPatternRenderer {\n  private static INSTANCES: ChatBackgroundPatternRenderer[] = [];\n\n  // private pattern: CanvasPattern;\n  // private objectUrl: string;\n  private options: ChatBackgroundPatternRendererInitOptions;\n  private canvases: Set<HTMLCanvasElement>;\n  // private createCanvasPatternPromise: Promise<CanvasPattern>;\n  // private exportCanvasPatternToImagePromise: Promise<string>;\n  private renderImageFromUrlPromise: Promise<HTMLImageElement>;\n  private image: HTMLImageElement;\n  private imageBitmap: ImageBitmap;\n\n  constructor() {\n    this.canvases = new Set();\n  }\n\n  public static getInstance(options: ChatBackgroundPatternRendererInitOptions) {\n    let instance = this.INSTANCES.find((instance) => {\n      return instance.options.element === options.element && deepEqual(instance.options, options, ['element']);\n    });\n\n    if(!instance) {\n      instance = new ChatBackgroundPatternRenderer();\n      instance.init(options);\n      this.INSTANCES.push(instance);\n    }\n\n    return instance;\n  }\n\n  public init(options: ChatBackgroundPatternRendererInitOptions) {\n    // if(this.options) {\n    //   if(this.options.width !== options.width || this.options.height !== options.height) {\n    //     this.createCanvasPatternPromise =\n    //       this.pattern =\n    //       this.exportCanvasPatternToImagePromise =\n    //       undefined;\n    //   }\n    // }\n\n    this.options = options;\n  }\n\n  public renderToCanvas(canvas: HTMLCanvasElement) {\n    // return this.createCanvasPattern(canvas).then(() => {\n    // return this.fillCanvas(canvas);\n    // });\n\n    return this.renderImageFromUrl(this.options.url).then(() => {\n      return this.fillCanvas(canvas);\n    });\n  }\n\n  private renderImageFromUrl(url: string) {\n    if(this.renderImageFromUrlPromise) return this.renderImageFromUrlPromise;\n    const img = this.image = document.createElement('img');\n    img.crossOrigin = 'anonymous';\n    return this.renderImageFromUrlPromise = renderImageFromUrlPromise(img, url, false).then(() => {\n      if(!IS_IMAGE_BITMAP_SUPPORTED || !USE_BITMAP) {\n        return img;\n      }\n\n      return createImageBitmap(img, {\n        resizeWidth: 1440,\n        resizeHeight: 2960\n      }).then((imageBitmap) => {\n        this.imageBitmap = imageBitmap;\n        return img;\n      });\n    });\n  }\n\n  /* private createCanvasPattern(canvas: HTMLCanvasElement) {\n    if(this.createCanvasPatternPromise) return this.createCanvasPatternPromise;\n    return this.createCanvasPatternPromise = this.renderImageFromUrl(this.options.url).then((img) => {\n      let createPatternFrom: HTMLImageElement | HTMLCanvasElement;\n      if(IS_SAFARI) {\n        const canvas = createPatternFrom = document.createElement('canvas');\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      } else {\n        createPatternFrom = img;\n      }\n\n      const perf = performance.now();\n      this.pattern = canvas.getContext('2d').createPattern(createPatternFrom, 'repeat-x');\n      console.warn('creating pattern time:', performance.now() - perf);\n\n      return this.pattern;\n    });\n  }\n\n  public exportCanvasPatternToImage(canvas: HTMLCanvasElement) {\n    if(this.exportCanvasPatternToImagePromise) return this.exportCanvasPatternToImagePromise;\n    return this.exportCanvasPatternToImagePromise = new Promise<string>((resolve) => {\n      canvas.toBlob((blob) => {\n        const newUrl = this.objectUrl = URL.createObjectURL(blob);\n        resolve(newUrl);\n      }, 'image/png');\n    });\n  } */\n\n  public cleanup(canvas: HTMLCanvasElement) {\n    this.canvases.delete(canvas);\n\n    if(!this.canvases.size) {\n      indexOfAndSplice(ChatBackgroundPatternRenderer.INSTANCES, this);\n\n      this.imageBitmap?.close();\n      // if(this.objectUrl) {\n      //   URL.revokeObjectURL(this.objectUrl);\n      // }\n    }\n  }\n\n  public fillCanvas(canvas: HTMLCanvasElement) {\n    const context = canvas.getContext('2d');\n    const {width, height} = canvas;\n    // const perf = performance.now();\n    // if(context.fillStyle instanceof CanvasPattern) {\n    //   context.clearRect(0, 0, width, height);\n    // }\n\n    const source = this.imageBitmap || this.image;\n\n    let imageWidth = source.width, imageHeight = source.height;\n    // let patternHeight = 1480 * canvas.dpr;\n    // if(+canvas.dataset.originalHeight !== height) patternHeight *= .6875;\n    const patternHeight = (500 + (windowSize.height / 2.5)) * canvas.dpr;\n    const ratio = patternHeight / imageHeight;\n    imageWidth *= ratio;\n    imageHeight = patternHeight;\n\n    if(this.options.mask) {\n      context.fillStyle = '#000';\n      context.fillRect(0, 0, width, height);\n      context.globalCompositeOperation = 'destination-out';\n    } else {\n      context.globalCompositeOperation = 'source-over';\n    }\n\n    const d = (y: number) => {\n      for(let x = 0; x < width; x += imageWidth) {\n        context.drawImage(source, x, y, imageWidth, imageHeight);\n      }\n    };\n\n    const centerY = (height - imageHeight) / 2;\n    d(centerY);\n\n    if(centerY > 0) {\n      let topY = centerY;\n      do {\n        d(topY -= imageHeight);\n      } while(topY >= 0);\n    }\n\n    const endY = height - 1;\n    for(let bottomY = centerY + imageHeight; bottomY < endY; bottomY += imageHeight) {\n      d(bottomY);\n    }\n\n    // for(let x = 0; x < width; x += imageWidth) {\n    //   for(let y = 0; y < height; y += imageHeight) {\n    //     context.drawImage(img, x, y, imageWidth, imageHeight);\n    //   }\n    // }\n    // context.fillStyle = this.pattern;\n    // context.fillRect(0, 0, width, height);\n    // console.warn('fill canvas time', performance.now() - perf);\n  }\n\n  public setCanvasDimensions(canvas: HTMLCanvasElement) {\n    const devicePixelRatio = Math.min(2, window.devicePixelRatio);\n    const width = this.options.width * devicePixelRatio;\n    let height = this.options.height * devicePixelRatio;\n\n    canvas.dpr = devicePixelRatio;\n    canvas.dataset.originalHeight = '' + height;\n    if(mediaSizes.activeScreen === ScreenSize.large && SCALE_PATTERN) height *= 1.5;\n    canvas.width = width;\n    canvas.height = height;\n  }\n\n  public createCanvas() {\n    const canvas = document.createElement('canvas');\n    this.canvases.add(canvas);\n    this.setCanvasDimensions(canvas);\n    return canvas;\n  }\n\n  public resize(width: number, height: number) {\n    this.init({\n      ...this.options,\n      width,\n      height\n    });\n\n    const promises: Promise<any>[] = [];\n    for(const canvas of this.canvases) {\n      this.setCanvasDimensions(canvas);\n      promises.push(this.renderToCanvas(canvas));\n    }\n\n    return Promise.all(promises);\n  }\n\n  public static resizeInstancesOf(element: HTMLElement) {\n    const toResize = this.INSTANCES.filter(instance => instance.options.element === element);\n\n    const rect = element.getBoundingClientRect();\n\n    return Promise.all(toResize.map((instance) => instance.resize(rect.width, rect.height)));\n  }\n\n  /* public setResizeMode(resizing: boolean) {\n    const canvases = Array.from(this.canvases);\n    const canvas = canvases[canvases.length - 1];\n    canvas.style.display = resizing ? 'none' : '';\n    const img = this.img;\n    img.style.display = resizing ? '' : 'none';\n\n    return {img, canvas};\n  } */\n}\n"],"names":["focusInput","input","e","placeCaretAtEnd","newEvent","Space","inProps","props","divProps","splitProps","_el$","_tmpl$","_$spread","_$mergeProps","style","amount","withTransition","undefined","createClassnames","createMemo","name","nextFrame","fn","enterTransition","classes","events","el","done","duration","onBeforeEnter","onEnter","onAfterEnter","timeout","endTransition","exitTransition","onBeforeExit","onExit","onAfterExit","noop","noopTransition","createSwitchTransition","source","options","initSource","untrack","initReturned","returned","setReturned","createSignal","isTransitionPending","useTransition","next","isExiting","after","batch","p","triggerTransitions","prev","createComputed","defaultElementPredicate","item","getResolvedElements","value","predicate","results","result","resolveElements","serverPredicate","children2","memo","getFirstChild","resolveFirst","TRANSITION_MODE_MAP","Transition","classnames","_ChatBackgroundStore","StaticUtilityClass","slug","blur","storageUrl","canDownload","managers","appDownloadManager","canReallyDownload","_a","blob","err","wallPaper","url","canvas","promise","DEFAULT_BACKGROUND_SLUG","response","CacheStorageController","ChatBackgroundStore","easeOutQuadApply","v","c","WIDTH","HEIGHT","ChatBackgroundGradientRenderer","getProgress","id","transitionValue","nextPositionTail","diff","frames","i","length","arr","hex","hexToRgb","shift","positions","phase","curveMax","curve","pos","distances","nextPos","idx","distance","tail","curPos","progress","pixels","colorsLength","positionsForPhase","previousPhase","previous","current","offset","y","centerDistanceY","centerDistanceY2","centerDistanceX","swirlFactor","theta","sinTheta","cosTheta","pixelX","pixelY","distanceSum","r","g","b","colorX","colorY","distanceX","distanceY","colors","color","position","animateSingle","tails","nextPhaseOnIdx","inc","currentPhaseCurve","nextPhaseCurve","curves","last","ids","gradientRenderer","SCALE_PATTERN","USE_BITMAP","IS_IMAGE_BITMAP_SUPPORTED","IS_FIREFOX","_ChatBackgroundPatternRenderer","instance","deepEqual","img","renderImageFromUrlPromise","imageBitmap","indexOfAndSplice","context","width","height","imageWidth","imageHeight","patternHeight","windowSize","ratio","x","centerY","topY","endY","bottomY","devicePixelRatio","mediaSizes","ScreenSize","promises","element","toResize","rect","ChatBackgroundPatternRenderer"],"mappings":"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","x_google_ignoreList":[3,4]}